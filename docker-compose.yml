version: "3"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - reviews_network

  control:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m control_server
    environment:
      - N_REPLICAS=1
      - IP_PREFIX=tp3
      - IP_ROUTER=router
      - N_ROUTER=2
      - IP_BUSSINESS=business
      - N_BUSSINESS=1
      - IP_USERS=users
      - N_USERS=1
      - IP_STARS5=stars5
      - N_STARS5=1
      - IP_HISTOGRAM=histogram
      - N_HISTOGRAM=1
      - IP_COMMENT=comment
      - N_COMMENT=1
      - IP_FUNNY=funny
      - N_FUNNY=1
      - IP_COMMENT_MAPPER=comment_mapper
      - N_COMMENT_MAPPER=2
      - IP_STARS5_MAPPER=stars5_mapper
      - N_STARS5_MAPPER=2
      - IP_HISTOGRAM_MAPPER=histogram_mapper
      - N_HISTOGRAM_MAPPER=2
      - IP_FUNNY_MAPPER=funny_mapper
      - N_FUNNY_MAPPER=2
      - IP_KEVASTO=kevasto
      - N_KEVASTO=3
    networks:
      - reviews_network
    depends_on:
      - rabbitmq
      - kevasto

  kevasto:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m main_kevasto
    environment:
      - NAME=kevasto
      - N_REPLICAS=3
    networks:
      - reviews_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  watchdog:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m watchdog.main
    environment:
      - N_REPLICAS=7
      - IP_PREFIX=tp3
      - IP_ROUTER=router
      - N_ROUTER=2
      - IP_BUSSINESS=business
      - N_BUSSINESS=1
      - IP_USERS=users
      - N_USERS=1
      - IP_STARS5=stars5
      - N_STARS5=1
      - IP_HISTOGRAM=histogram
      - N_HISTOGRAM=1
      - IP_COMMENT=comment
      - N_COMMENT=1
      - IP_FUNNY=funny
      - N_FUNNY=1
      - IP_COMMENT_MAPPER=comment_mapper
      - N_COMMENT_MAPPER=2
      - IP_STARS5_MAPPER=stars5_mapper
      - N_STARS5_MAPPER=2
      - IP_HISTOGRAM_MAPPER=histogram_mapper
      - N_HISTOGRAM_MAPPER=2
      - IP_FUNNY_MAPPER=funny_mapper
      - N_FUNNY_MAPPER=2
      - IP_KEVASTO=kevasto
      - N_KEVASTO=3
      - IP_CONTROL=control
      - N_CONTROL=1
    networks:
      - reviews_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq

  router:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m router.main
    environment:
      - N_REPLICAS=2
    networks:
      - reviews_network
    depends_on:
      - rabbitmq
      - kevasto
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  histogram_mapper:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m histogram.mapper_main
    environment:
      - N_REPLICAS=2
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  users:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m users.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  histogram:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m histogram.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  business:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m business.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  stars5:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m stars5.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  stars5_mapper:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m stars5.mapper_main
    environment:
      - N_REPLICAS=2
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  comment:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m comment.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  comment_mapper:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m comment.mapper_main
    environment:
      - N_REPLICAS=2
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  funny:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m funny.main
    environment:
      - N_REPLICAS=1
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  funny_mapper:
    image: reviews
    build:
      context: .
    entrypoint: python3 -m funny.mapper_main
    environment:
      - N_REPLICAS=2
    networks:
      - reviews_network
    depends_on:
      - router
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  reviews_network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
